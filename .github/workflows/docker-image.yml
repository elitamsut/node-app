name: CI Pipeline

on:
  push:
    branches: [develop]           # build on pushes to develop
  pull_request:
    branches: [develop]           # and on PRs targeting develop

env:
  IMAGE_CONFIG: image-config.yaml # where the Docker tag lives
  DOCKER_IMAGE: elitamsut/helloworld-expressjs

jobs:
  build-and-push:
    runs-on: ubuntu-latest

    steps:
      # 1 | Code checkout – Node 20‑ready
      - name: Checkout code
        uses: actions/checkout@v4      # Node 20 ✔️ :contentReference[oaicite:0]{index=0}
        with:
          ref: develop

      # 2 | (Optional) guarantee yq is present
      - name: Install yq
        run: sudo snap install yq

      # 3 | Buildx builder – Node 20‑ready
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3    # Node 20 ✔️ :contentReference[oaicite:1]{index=1}

      # 4 | Build the image and expose its tag
      - name: Build Docker image
        id: build
        run: |
          TAG=$(yq '.image.tag' "$IMAGE_CONFIG")
          echo "Building image with tag: $TAG"
          docker build --pull -t "$DOCKER_IMAGE:$TAG" .
          echo "TAG=$TAG" >> "$GITHUB_ENV"        # for future shell steps
          echo "tag=$TAG" >> "$GITHUB_OUTPUT"     # for expression syntax

      # 5 | Log‑in to Docker Hub – Node 20‑ready
      - name: Log in to Docker Hub
        uses: docker/login-action@v3              # Node 20 ✔️ :contentReference[oaicite:2]{index=2}
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      # 6 | Push the image
      - name: Push Docker image
        run: |
          echo "Pushing $DOCKER_IMAGE:${TAG}"
          docker push "$DOCKER_IMAGE:${TAG}"
